version: "3.8"
services:
  back:
    build:
      context: "."
      dockerfile: Dockerfile.all
      target: back
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    # healthcheck:
    #   test:
    #     [
    #       "CMD",
    #       "curl",
    #       "--fail",
    #       "--output /dev/null",
    #       "http://localhost:3000/api/",  NEED DYNAMIC PORT FOR HEALTHCHECK
    #     ]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 6
    #   start_period: 10s
    restart: unless-stopped

  front:
    build:
      context: "."
      dockerfile: Dockerfile.all
      target: front
    env_file:
      - .env

  pipelines:
    build:
      context: "."
      dockerfile: Dockerfile.all
      target: pipelines
    env_file:
      - .env
    environment:
      - LOGDIR=/var/lib/pipelines/log
      - ESTABLISHMENT_BACKFILL_SCHEDULE
      - ESTABLISHMENT_UPDATE_FROM_SIRENE
    volumes:
      - ./docker-data/pipelines:/var/lib/pipelines
      - ./.env:/app/back/.env

  nginx:
    restart: unless-stopped
    depends_on:
      back:
        # condition: service_healthy NEED BACK DYNAMIC PORT FOR HEALTHCHECK
        condition: service_started
      front:
        condition: service_started
    build:
      context: ./nginx
      dockerfile: Dockerfile.nginx
      args:
        - ENV_TYPE=${ENV_TYPE:-develop}
        - DOMAIN=${DOMAIN:-domain.tld}
        - LETSENCRYPT_MAIL=${LETSENCRYPT_MAIL:-not_provided@mail.com}
        - ADMIN_ALLOWED_IP=${ADMIN_ALLOWED_IP:-}
    ports:
      - "${EXPOSED_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/etc/letsencrypt:/etc/letsencrypt
      - ./nginx/etc/nginx/conf.d/:/etc/nginx/conf.d/

  postgres:
    image: postgis/postgis:13-master
    shm_size: 256m
    environment:
      POSTGRES_LOG_STATEMENT: all
      POSTGRES_DB: immersion-db
      POSTGRES_USER: immersion
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-pg_password}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U immersion -d immersion-db"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./docker-data/postgresql:/var/lib/postgresql/data
    ports:
      - "${PG_EXPOSED_PORT:-5432}:5432"

  adminer:
    image: adminer

name: Copy DB PE vers Prod Scalingo (secnum)

on:
  workflow_dispatch:

jobs:
  dump-from-PE-and-restore-to-secnum-prod:
    runs-on: ubuntu-latest
    name: Dump and restore the PE database on scalingo Production.
    steps:
      - name: Install scalingo CLI
        run: |
          wget -qO- https://cli-dl.scalingo.com/install.sh | bash
          echo "$HOME/bin" >> $GITHUB_PATH

      - name: Login with api-token
        run: scalingo login --api-token=${{ secrets.SCALINGO_API_TOKEN_SECNUM }}

      - name: Stop the app
        run: scalingo --region osc-secnum-fr1 --app if-prod-back scale web:0

      - name: Dump the remote database data and restore it to the local database.
        run: >-
          scalingo --region osc-secnum-fr1 --app if-prod-back run bash -c "echo 'Setting up pgsql-client' &&
                dbclient-fetcher pgsql &&
              echo '> Dumping schema' &&
                pg_dump \
                  --format c\
                  --no-owner\
                  --no-privileges\
                  --no-comments\
                  --exclude-table 'spatial_ref_sys'\
                  --exclude-schema 'tiger'\
                  --exclude-schema 'tiger_data'\
                  --exclude-schema 'topology'\
                  --exclude-schema 'information_schema'\
                  --exclude-schema '^pg_*'\
                  --dbname \$PE_DATABASE_URL\
                  --file dump.pgsql &&
              echo '> Finished dumping data' &&
              echo '> Create a Table of content for restore, ignore postgis related schemas and tables:' &&
                pg_restore -l dump.pgsql | grep -v tiger | grep -v spatial_ref_sys | grep -v topology > list.txt &&
              echo '> Dropping data and schema owned by current user' &&
                psql \$SCALINGO_POSTGRESQL_URL -c 'DROP OWNED BY CURRENT_USER CASCADE;'
              echo '> Add Postgis extension if not exists' &&
                psql \$SCALINGO_POSTGRESQL_URL -c 'CREATE EXTENSION IF NOT EXISTS postgis;' &&
              echo '> Start pg_restore' &&\
                pg_restore\
                  --use-list=list.txt\
                  --verbose\
                  --no-owner\
                  --no-privileges\
                  --no-comments\
                  --exit-on-error\
                  --dbname \$SCALINGO_POSTGRESQL_URL dump.pgsql &&
              echo '> Finished restoring schema' &&
                exit 0"

      - name: Restart the app
        run: scalingo --region osc-secnum-fr1 --app if-prod-back scale web:1
